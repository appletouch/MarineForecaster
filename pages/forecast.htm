<p>Forecast for found city: {{ weatherResult.city.name }}<p/>
<div >
    <a href="#/forecast/1">Today</a>  |
    Days:
    <a ng-class="{'bg-primary':days==='2'}" href="#/forecast/2">2</a>  |
    <a ng-class="{'bg-primary': days==='5'}"  href="#forecast/5">5</a> |
    <a ng-class="{'bg-primary': days==='7'}"  href="#forecast/7">7</a>
</div>


<hr/>



<div ng-repeat="wd in weatherResult.list">

    <div class="row">
        <div class="col-md-12">


            <!--<div class="panel panel-default">-->
                <!--<div class="panel-heading">-->
                    <!--<h3 class="panel-title">{{ convertToDate(wd.dt)}}</h3>-->
                   <!--&lt;!&ndash; Alternative for client side filter: <h3 class="panel-title">{{ convertToDate(wd.dt) | date: ' d MMM, y' }}</h3> &ndash;&gt;-->
                <!--</div>-->
                <!--<div class="panel-body">-->
                    <!--Daytime temperature: {{ convertToDegrees(wd.temp.day) }} &#45;&#45;-->
                    <!--Minimum temperature: {{ convertToDegrees(wd.temp.min) }} &#45;&#45;-->
                    <!--Maximum temperature: {{ convertToDegrees(wd.temp.max) }}-->
                <!--</div>-->
            <!--</div>-->


            <!--Start of custom directive in view
            Custom directive isolated scope is connected to parent scope of the controller
            javascript variables get Normalized from convertToTemp ===> convert-to-temp (capital letters become dash)
            -->
            <weather-component weather-day="wd"
                               convert-to-temp="convertToDegrees(tempParamExScope)"
                               convert-to-date="convertToDate(dateParamExScope)">

            </weather-component>



        </div>
    </div>
</div>

